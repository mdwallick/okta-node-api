variable "org_name" {}
variable "api_token" {}
variable "base_url" {}

provider "okta" {
  org_name  = var.org_name
  api_token = var.api_token
  base_url  = var.base_url
  version   = "~> 3.11"
}
resource "okta_group" "funauth-admin" {
  name        = "FunAuth Admins"
  description = "Users in this group are granted admin access to FunAuth"
}
resource "okta_group" "funauth-users" {
  name        = "FunAuth Usersw"
  description = "Users in this group are regular FunAuth users"
}
resource "okta_app_oauth" "funauth_oidc" {
  label       = "FunAuth Demo"
  type        = "web"
  grant_types = [
      "authorization_code",
      "interaction_code",
      "refresh_token"
  ]
  redirect_uris = [
    "http://localhost:8080/authorization-code/callback"
  ]
  post_logout_redirect_uris = [
      "http://localhost:8080/"
  ]
  response_types = ["code"]
  issuer_mode    = "DYNAMIC"
  lifecycle {
     ignore_changes = [groups]
  }
}
# Create the App Assignment
resource "okta_app_group_assignment" "admin" {
  app_id   = okta_app_oauth.funauth_oidc.id
  group_id = okta_group.funauth-admin.id
}
resource "okta_app_group_assignment" "users" {
  app_id   = okta_app_oauth.funauth_oidc.id
  group_id = okta_group.funauth-users.id
}
resource "okta_trusted_origin" "funauth_http" {
  name   = "FunAuth HTTP"
  origin = "http://localhost:8080"
  scopes = ["REDIRECT", "CORS"]
}
resource "okta_auth_server" "funauth_authz" {
  name        = "FunAuth"
  description = "Generated by Terraform"
  audiences   = ["api://funAuth"]
}
resource "okta_auth_server_policy" "funauth_policy" {
  auth_server_id   = okta_auth_server.funauth_authz.id
  status           = "ACTIVE"
  name             = "standard"
  description      = "Generated by Terraform"
  priority         = 1
  client_whitelist = ["${okta_app_oauth.funauth_oidc.id}"]
}
resource "okta_auth_server_policy_rule" "funauth_policy_rule" {
  auth_server_id       = okta_auth_server.funauth_authz.id
  policy_id            = okta_auth_server_policy.funauth_policy.id
  status               = "ACTIVE"
  name                 = "one_hour"
  priority             = 1
  group_whitelist      = ["${data.okta_group.all.id}"]
  grant_type_whitelist = ["authorization_code", "interaction_code"]
  scope_whitelist      = ["*"]
}
output "client_id" {
  value = "${okta_app_oauth.funauth_oidc.client_id}"
}
output "auth_server_id" {
  value = "${okta_auth_server.funauth_authz.id}"
}
output "issuer" {
  value = "${okta_auth_server.funauth_authz.issuer}"
}
